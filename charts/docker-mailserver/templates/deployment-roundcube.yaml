{{/* This whole template is only necessary if we're using roundcube */}}
{{ if .Values.roundcube.enabled -}}  
---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  labels:
    {{- include "dockermailserver.labels" . | nindent 4 }}
    app.kubernetes.io/component: roundcube
  name: {{ template "dockermailserver.fullname" . }}-roundcube
spec:
  replicas: {{ .Values.roundcube.replicas }}
  selector:
    matchLabels:
      {{- include "dockermailserver.labels" . | nindent 6 }}
      app.kubernetes.io/component: roundcube
  strategy: {{- toYaml .Values.roundcube.strategy | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "dockermailserver.labels" . | nindent 8 }}
        app.kubernetes.io/component: roundcube
      annotations:
        {{ toYaml .Values.roundcube.annotations | nindent 8 }}  
    spec:
      serviceAccountName: {{ template "dockermailserver.roundcube.serviceAccountName" . }}
      containers:
        - name: roundcube
          image: "{{ .Values.roundcube.image.name }}:{{ .Values.roundcube.image.tag }}"
          imagePullPolicy: {{ .Values.roundcube.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8888
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          volumeMounts:
            - name: data
              mountPath: "/var/www/html"
          env:
          - name: LOG_TO_STDOUT
            value: "true"
      volumes:
      - name: "data"
        persistentVolumeClaim:
          claimName: {{ template "dockermailserver.fullname" . }}-roundcube
{{- end }}

