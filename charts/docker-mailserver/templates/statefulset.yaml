---
apiVersion: apps/v1
kind: "StatefulSet"
metadata:
  labels:
    {{- include "dockermailserver.labels" . | nindent 4 }}
    app.kubernetes.io/component: dockermailserver
  name: {{ template "dockermailserver.fullname" . }}
  {{- if .Values.dockermailserver.annotations }}
  annotations:
    {{- toYaml .Values.dockermailserver.annotations | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.dockermailserver.replicas }}
  serviceName: {{ template "dockermailserver.fullname" . }}-headless
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
  selector:
    matchLabels:
      {{- include "dockermailserver.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: dockermailserver
  updateStrategy:
    {{- toYaml .Values.dockermailserver.strategy | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "dockermailserver.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: dockermailserver
      {{- if .Values.dockermailserver.annotations }}
      annotations:
        {{- toYaml .Values.dockermailserver.annotations | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ template "dockermailserver.serviceAccountName" . }}
      volumes:
        - name: "config"
          emptyDir: {}
        - name: "configmap"
          projected:
            sources:
            - configMap:
                name: {{ template "dockermailserver.fullname" . }}-configs
            - secret:
                name: {{ template "dockermailserver.fullname" . }}-postfix-users
        - name: "dkimkeys"
          secret:
            secretName: {{ template "dockermailserver.fullname" . }}-dkimkeys
        {{- if .Values.ssl.enabled }}
        - name: "ssl-cert"
          secret:
            {{- if .Values.ssl.existingSecret }}
            secretName: {{ .Values.ssl.existingSecret }}
            {{- else }}
            secretName: {{ template "dockermailserver.fullname"}}-tls
            {{- end }}
        {{- end }}
        - name: tmp
          emptyDir: {}
      initContainers:
        - name: prep-config
          image: {{ .Values.initContainer.image.name }}:{{ .Values.initContainer.image.tag }}
          imagePullPolicy: {{ .Values.initContainer.image.pullPolicy }}
          command: [ 'sh','-c', 'cp /tmp/configmaps/* /tmp/docker-mailserver -rfpvL' ]
          securityContext:
            {{- toYaml .Values.initContainer.securityContext | nindent 12 }}
          resources:
            {{- toYaml .Values.initContainer.resources | nindent 12 }}
          volumeMounts:
            - name: configmap
              mountPath: /tmp/configmaps
              readOnly: true
            - name: config
              mountPath: /tmp/docker-mailserver/
      containers:
        - name: dockermailserver
          env:
            {{- range $key, $value :=.Values.env}}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          image: {{ .Values.dockermailserver.image.name }}:{{ .Values.dockermailserver.image.tag }}
          imagePullPolicy: {{ .Values.dockermailserver.image.pullPolicy }}
          resources:
            {{- toYaml .Values.dockermailserver.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.dockermailserver.securityContext | nindent 12 }}
            {{- if eq .Values.env.ENABLE_FAIL2BAN 1.0 }}
            capabilities:
              add:
                - NET_ADMIN
            {{- end }}
          volumeMounts:
            - name: config
              mountPath: /tmp/docker-mailserver
            {{- if .Values.ssl.enabled }}
            - name: ssl-cert
              mountPath: /tmp/ssl
              readOnly: true
            {{- end }}
            - name: tmp
              mountPath: /var/tmp
            - name: data
              mountPath: /var/log/mail
              subPath: log
            - name: data
              mountPath: /var/mail
              subPath: mail      
            - name: data
              mountPath: /var/mail-state
              subPath: mail-state
            - name: configmap
              subPath: dovecot-services.conf
              mountPath: /etc/dovecot/conf.d/services.conf
              readOnly: true
            - name: configmap
              subPath: dovecot.cf
              mountPath: /etc/dovecot/conf.d/zz-custom.cf
              readOnly: true
            - name: configmap
              subPath: TrustedHosts
              mountPath: /tmp/docker-mailserver/opendkim/TrustedHosts
              readOnly: true
            - name: configmap
              subPath: SigningTable
              mountPath: /tmp/docker-mailserver/opendkim/SigningTable
              readOnly: true
            - name: configmap
              subPath: KeyTable
              mountPath: /tmp/docker-mailserver/opendkim/KeyTable
              readOnly: true
            - name: configmap
              subPath: dkim_signing.conf
              mountPath: /etc/rspamd/override.d/dkim_signing.conf
              readOnly: true
            {{- if gt .Values.dockermailserver.replicas 1.0 }}
            - name: configmap
              subPath: 10-replication.conf
              mountPath: /etc/dovecot/conf.d/10-replication.conf
              readOnly: true
            - name: configmap
              subPath: 80-replication.conf
              mountPath: /etc/dovecot/conf.d/80-replication.conf
              readOnly: true
            - name: configmap
              subPath: 91-override-sieve.conf
              mountPath: /etc/dovecot/conf.d/91-override-sieve.conf
              readOnly: true
            {{- end }}
            {{- range .Values.domains }}
              {{- $path := printf "/tmp/docker-mailserver/dkimkeys/%s/mail.private" . }}
              {{- $name := printf "%s" . }}
            - name: dkimkeys
              mountPath: {{ $path }}
              subPath: {{ $name }}
              readOnly: true
            {{- end }}
            {{- if .Values.additionalVolumeMounts }}
              {{ toYaml .Values.additionalVolumeMounts | indent 12 }}
            {{- end }}
          livenessProbe:
            exec:
               command:
                 - /bin/bash
                 - -c
                 - supervisorctl status | grep -E "amavis|clamav|cron|dovecot|mailserver|rspamd|opendmarc|postfix|rsyslog" | grep RUNNING
            initialDelaySeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
          readinessProbe:
            exec:
               command:
                 - /bin/bash
                 - -c
                 - supervisorctl status | grep -E "mailserver|postfix" | grep RUNNING
            initialDelaySeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
        {{- if .Values.metrics.enabled }}
        - name: metrics-exporter
          image: {{ .Values.metrics.image.name }}:{{ .Values.metrics.image.tag }}
          imagePullPolicy: {{ .Values.metrics.image.pullPolicy }}
          command: ["/bin/postfix_exporter"]
          args: 
            - "--postfix.showq_path"
            - "/var/mail-state/spool-postfix/public/showq"
            - "--postfix.logfile_path"
            - "/var/log/mail/mail.log"
          ports:
            - containerPort: 9154
              name: http
              protocol: TCP
          resources:
            {{ toYaml .Values.metrics.resources | nindent 12 }}
          securityContext:
            {{ toYaml .Values.dockermailserver.securityContext | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /var/log/mail
              subPath: log
              readOnly: true
            - name: data
              mountPath: /var/mail-state
              subPath: mail-state
              readOnly: true
        {{- end }}
      restartPolicy: "Always"

  volumeClaimTemplates:
    - metadata:
        name: data
        annotations:
          {{- toYaml .Values.dockermailserver.annotations | nindent 10 }}
      spec:
        accessModes:
          - {{ default "ReadWriteOnce" .Values.persistent.accessModes }}
        storageClassName: {{ default "" .Values.persistent.storageClassName }}
        resources:
          requests:
            storage: {{ default "1Gi" .Values.persistent.size }}
