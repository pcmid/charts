---
apiVersion: "v1"
kind: "ConfigMap"
metadata:
  labels:
    {{- include "dockermailserver.labels" . | nindent 4 }}
  name: {{ template "dockermailserver.fullname" . }}-configs
data:
  postfix-main.cf: |
  {{/* Enable proxy protocol for postscreen / dovecot */}}
  {{- if or .Values.haproxy.enabled .Values.proxyProtocol.enabled }}  # Necessary to permit proxy protocol from haproxy to postscreen
    postscreen_upstream_proxy_protocol = haproxy
  {{- end }}
  {{- if not .Values.spfTestsDisabled }}
    smtpd_recipient_restrictions = permit_sasl_authenticated, permit_mynetworks, reject_unauth_destination, reject_unauth_pipelining, reject_invalid_helo_hostname, reject_non_fqdn_helo_hostname, reject_unknown_recipient_domain, reject_rbl_client zen.spamhaus.org, reject_rbl_client bl.spamcop.net{{ range .Values.rblRejectDomains }}, reject_rbl_client {{ . }}{{ end }}
  {{- end }}

  dovecot-services.cf: |
  {{- if or .Values.haproxy.enabled .Values.proxyProtocol.enabled }}
    haproxy_trusted_networks = {{ .Values.proxyProtocol.trustedNetworks }}
  {{ end }}
    service imap-login {
      inet_listener imap {
        {{ if or .Values.haproxy.enabled .Values.proxyProtocol.enabled -}}haproxy = yes{{ end }}
      }  
      inet_listener imaps {
        {{ if or .Values.haproxy.enabled .Values.proxyProtocol.enabled -}}haproxy = yes{{ end }}
      }
    {{- if .Values.roundcube.enabled }}
      inet_listener imaps-roundcube {
        port = 10993
        ssl = yes
      }
    {{ end }}      
    }    
    service pop3-login {
      inet_listener pop3 {
        {{ if or .Values.haproxy.enabled .Values.proxyProtocol.enabled -}}haproxy = yes{{ end }}
      }
      inet_listener pop3s {
        {{ if or .Values.haproxy.enabled .Values.proxyProtocol.enabled -}}haproxy = yes{{ end }}
      }                        
    }

  {{- if .Values.options.enable_fail2ban }}
  {{- (.Files.Get "config/fail2ban-*.cf") | nindent 2 }}
  {{- end }}

  80-replication.conf: |
    mail_plugins = $mail_plugins notify replication

    service replicator {
      process_min_avail = 1
      unix_listener replicator-doveadm {
        mode = 0600
        user = docker
      }
    }

    service aggregator {
      fifo_listener replication-notify-fifo {
        user = docker
      }
      unix_listener replication-notify {
        user = docker
      }
    }
    
    doveadm_port = 4117
    doveadm_password = secret

    service doveadm {
      inet_listener {
        port = 4117
        ssl = yes
      }
    }

    plugin {
      #mail_replica = tcp:anotherhost.example.com       # use doveadm_port
      #mail_replica = tcp:anotherhost.example.com:12345 # use port 12345 explicitly
    }

  91-override-sieve.conf: |
    plugin {
      sieve = /var/mail/sieve/%d/%n/.dovecot.sieve
      sieve_dir = /var/mail/sieve/%d/%n/sieve
    }

  am-i-healthy.sh: |
    #!/bin/bash
    # this script is intended to be used by periodic kubernetes liveness probes to ensure that the container
    # (and all its dependent services) is healthy
    {{ range .Values.livenessTests.commands -}}
    {{ . }} && \
    {{- end }}
    echo "All healthy"
